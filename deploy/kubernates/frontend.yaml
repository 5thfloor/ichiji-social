apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: frontend
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: frontend
        revision: "20181108002"
    spec:
      initContainers:
      - name: db-migration
        image: gcr.io/the5thfloorinc/mastodon:production
        imagePullPolicy: Always
        envFrom:
        - configMapRef:
            name: env-production
        command: ["sh", "-c", "bundle exec rails db:migrate"]

      containers:
      - name: nginx
        image: nginx
        resources:
          requests:
            cpu: "50m"
        ports:
          - containerPort: 80
        livenessProbe:
          failureThreshold: 3
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          tcpSocket:
            port: 80
          timeoutSeconds: 30
        readinessProbe:
          failureThreshold: 3
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          tcpSocket:
            port: 80
          timeoutSeconds: 30
        volumeMounts:
        - mountPath: /etc/nginx/conf.d
          name: nginx-config
          readOnly: true
        - mountPath: /public
          name: public-volume
          readOnly: true

      - name: web
        image: gcr.io/the5thfloorinc/mastodon:production
        imagePullPolicy: Always
        envFrom:
        - configMapRef:
            name: env-production
        resources:
          requests:
            cpu: "80m"
        ports:
        - containerPort: 3000
        volumeMounts:
        - name: mastodon-disk-system
          mountPath: /mastodon/public/system
        command: ["bundle", "exec", "rails", "s", "-p", "3000", "-b", "0.0.0.0"]

      - name: streeming
        image: gcr.io/the5thfloorinc/mastodon:production
        imagePullPolicy: Always
        envFrom:
        - configMapRef:
            name: env-production
        resources:
          requests:
            cpu: "70m"
        ports:
        - containerPort: 4000
        command: ["yarn", "start"]

      volumes:
      - name: mastodon-disk-system
        emptyDir: {}
      - name: nginx-config
        configMap:
          name: nginx-config
      - name: public-volume
        hostPath:
          path: /tmp/public

---
apiVersion: v1
kind: Service
metadata:
  name: frontend
  labels:
    app: frontend
  annotations:
    service.beta.kubernetes.io/external-traffic: OnlyLocal
spec:
  type: NodePort
  externalTrafficPolicy: Local
  ports:
  - name: http
    port: 80
    targetPort: 80
  selector:
    app: frontend

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: prometheus
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  serviceName: prometheus
  template:
    metadata:
      labels:
        app: prometheus
        revision: "20190312001"
    spec:
      initContainers:
        - name: init-chown-data
          image: busybox:latest
          imagePullPolicy: IfNotPresent
          command: ["chown", "-R", "65534:65534", "/data"]
          volumeMounts:
            - name: prometheus-data
              mountPath: /data
              subPath: ""
      containers:
        - name: prometheus
          image: prom/prometheus:v2.6.1
          imagePullPolicy: IfNotPresent
          resources:
            limits:
              cpu: 100m
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 1Gi
          ports:
            - containerPort: 9090
          readinessProbe:
            httpGet:
              path: /-/ready
              port: 9090
            initialDelaySeconds: 30
            timeoutSeconds: 30
          livenessProbe:
            httpGet:
              path: /-/healthy
              port: 9090
            initialDelaySeconds: 30
            timeoutSeconds: 30
          volumeMounts:
            - name: prometheus-config
              mountPath: /etc/prometheus
            - name: prometheus-data
              mountPath: /data
              subPath: ""
          args:
            - "--config.file=/etc/prometheus/config.yml"
            - "--storage.tsdb.path=/data"
        - name: sidekiq-exporter
          image: gcr.io/the5thfloorinc/sidekiq-exporter
          imagePullPolicy: Always
          resources:
            limits:
              cpu: 10m
              memory: 64Mi
            requests:
              cpu: 10m
              memory: 64Mi
          envFrom:
            - configMapRef:
                name: env-production
        - name: stackdriver-sidecar
          image: gcr.io/stackdriver-prometheus/stackdriver-prometheus-sidecar:0.4.0
          imagePullPolicy: IfNotPresent
          args:
            - "--config-file=/etc/prometheus/sidecar.yml"
            - "--stackdriver.project-id=the5thfloorinc"
            - "--prometheus.wal-directory=/data/wal"
            - "--stackdriver.kubernetes.location=asia-northeast1-b"
            - "--stackdriver.kubernetes.cluster-name=mastodon"
            - "--stackdriver.generic.location=asia-northeast1-b"
            - "--stackdriver.generic.namespace=mastodon"
          ports:
            - name: sidecar
              containerPort: 9091
          volumeMounts:
            - name: prometheus-config
              mountPath: /etc/prometheus
            - name: prometheus-data
              mountPath: /data
              subPath: ""
      volumes:
        - name: prometheus-config
          configMap:
            name: prometheus-config
  volumeClaimTemplates:
  - metadata:
      name: prometheus-data
    spec:
      storageClassName: standard
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: "16Gi"

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
data:
  config.yml: |
    scrape_configs:
      - job_name: self-checking
        static_configs:
          - targets: ['localhost:9090']
      - job_name: ichiji-social-sidekiq
        static_configs:
          - targets: ['localhost:9292']
  sidecar.yml: |
    static_metadata:
      - metric: sidekiq_enqueued
        type: gauge

---
apiVersion: v1
kind: Service
metadata:
  name: prometheus
  labels:
    app: prometheus
  annotations:
    service.beta.kubernetes.io/external-traffic: OnlyLocal
spec:
  type: NodePort
  externalTrafficPolicy: Local
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 9090
  selector:
    app: prometheus

---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: prometheus
spec:
  backend:
    serviceName: prometheus
    servicePort: 80
